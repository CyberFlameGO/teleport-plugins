---
kind: pipeline
type: kubernetes
name: test

trigger:
  branch:
    - master
    - branch/*
  event:
    exclude:
      - cron
      - promote
      - rollback
  repo:
    include:
      - gravitational/*

workspace:
  path: /go

clone:
  disable: true

steps:
  - name: Check out code
    image: golang:1.13.2
    commands:
      - mkdir -p /go/src/github.com/gravitational/teleport-plugins
      - cd /go/src/github.com/gravitational/teleport-plugins
      - git init && git remote add origin ${DRONE_REMOTE_URL}
      - |
        # handle pull requests
        if [ "${DRONE_BUILD_EVENT}" = "pull_request" ]; then
          git fetch origin +refs/heads/${DRONE_COMMIT_BRANCH}:
          git checkout ${DRONE_COMMIT_BRANCH}
          git fetch origin ${DRONE_COMMIT_REF}:
          git merge ${DRONE_COMMIT}
        # handle tags
        elif [ "${DRONE_BUILD_EVENT}" = "tag" ]; then
          git fetch origin +refs/tags/${DRONE_TAG}:
          git checkout -qf FETCH_HEAD
        # handle pushes/other events
        else
          if [ "${DRONE_COMMIT_BRANCH}" = "" ]; then
            git fetch origin
            git checkout -qf ${DRONE_COMMIT_SHA}
          else
            git fetch origin +refs/heads/${DRONE_COMMIT_BRANCH}:
            git checkout ${DRONE_COMMIT} -b ${DRONE_COMMIT_BRANCH}
          fi
        fi

  - name: Run linter
    image: golangci/golangci-lint:v1.27.0
    commands:
      - cd /go/src/github.com/gravitational/teleport-plugins
      - make lint

  - name: Run tests
    image: golang:1.13.2
    commands:
      - cd /go/src/github.com/gravitational/teleport-plugins
      - make test

  - name: Send Slack notification
    image: plugins/slack
    settings:
      webhook:
        from_secret: SLACK_WEBHOOK
      channel: teleport-builds
      template: |
        {{#if build.pull }}
          *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}*: <https://github.com/{{ repo.owner }}/{{ repo.name }}/pull/{{ build.pull }}|Pull Request #{{ build.pull }}>
        {{else}}
          *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}: Build #{{ build.number }}* (type: `{{ build.event }}`)
        {{/if}}
        Commit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>
        Branch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>
        Author: {{ build.author }}
        <{{ build.link }}|Visit build page ↗>
    when:
      event: [push]
      status: [failure]

---
kind: pipeline
type: kubernetes
name: build

trigger:
  event:
    - tag
  ref:
    include:
      - refs/tags/teleport-*-v*

depends_on:
  - test

workspace:
  path: /go/src/github.com/gravitational/teleport-plugins

clone:
  disable: true

steps:
  - name: Build artifacts
    image: golang:1.13.2
    commands:
      - git clone https://github.com/gravitational/teleport-plugins.git .
      - git fetch --all --tags
      - git checkout ${DRONE_TAG}
      - mkdir -p build/
      - export PLUGIN_TYPE=$(echo ${DRONE_TAG} | cut -d- -f2)
      - make release/access-$PLUGIN_TYPE
      - find access/ -iname "*.tar.gz" -print -exec cp {} build/ \;
      - cd build
      - for FILE in *.tar.gz; do sha256sum $FILE > $FILE.sha256; done
      - ls -l .

  - name: Upload to S3
    image: plugins/s3
    settings:
      bucket:
        from_secret: AWS_S3_BUCKET
      access_key:
        from_secret: AWS_ACCESS_KEY_ID
      secret_key:
        from_secret: AWS_SECRET_ACCESS_KEY
      region: us-west-2
      source: /go/src/github.com/gravitational/teleport-plugins/build/*
      target: teleport-plugins/tag/${DRONE_TAG}
      strip_prefix: /go/src/github.com/gravitational/teleport-plugins/build

---
kind: pipeline
type: kubernetes
name: promote-artifact

trigger:
  event:
    - promote
  target:
    - production

workspace:
  path: /go/src/github.com/gravitational/teleport-plugins

clone:
  disable: true

steps:
  - name: Download artifact from S3 artifact publishing bucket
    image: amazon/aws-cli
    environment:
      AWS_S3_BUCKET:
        from_secret: AWS_S3_BUCKET
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY
      AWS_REGION: us-west-2
    commands:
      - aws s3 sync s3://$AWS_S3_BUCKET/teleport-plugins/tag/${DRONE_TAG}/ .

  - name: Upload artifact to production S3 bucket with public read access
    image: plugins/s3
    settings:
      bucket:
        from_secret: PRODUCTION_AWS_S3_BUCKET
      access_key:
        from_secret: PRODUCTION_AWS_ACCESS_KEY_ID
      secret_key:
        from_secret: PRODUCTION_AWS_SECRET_ACCESS_KEY
      region: us-east-1
      acl: public-read
      source: /go/src/github.com/gravitational/teleport-plugins/*
      target: teleport-plugins/${DRONE_TAG##*-v}/
      strip_prefix: /go/src/github.com/gravitational/teleport-plugins/

---
kind: signature
hmac: 9f98e09eba5b29877ae002614d6b7fb65414068e17be6b08d065ed6de9f702fa

...
